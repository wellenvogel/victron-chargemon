@import "flexbox";
@import "defines";

@import "fonts.css";




html, body, #root, .main {
  height:100%;
  width: 100%;
  box-sizing: border-box;
  margin: 0;
  overflow: hidden;
  font-family: "Roboto","Times New Roman";
}
/* view is the real container for the header and content */
.view{
  .flex-display();
  .flex-direction(column);
  margin: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
  * {
    box-sizing: border-box;
  }
}



.content{
  .flex(1);
}

.mainBackColor{
  background-color: @mainColor;
}
.mainColor{
  color: @mainColor;
}

.toolbarButton{
  color: white !important;
}
.iconColor{
  color: @mainColor;
}

button.fab{
  background-color: @mainColor;
  .iconColor{
    color: white;
  }
}


.toolbar-label {
  display: inline-block;
  margin-bottom: auto;
  margin-top: auto;
  white-space: nowrap;
  overflow: hidden;
}
.toolbar span{
  display: inline-block;
}
.toolbar button{
  z-index: 10;
  color: white !important;
}
.spacer{
  .flex(1);
}

.chargerItems{
  overflow: auto;
}

.mainItems() {
  width: @mainWidth;
  margin-left: auto;
  margin-right: auto;
}

.stateDisplay {
  .mainItems();
  .valueDisplay {
    font-size: 0.5em;
    width: 50%;
    display: inline-block;
  }
}
.dataDisplay {
  .mainItems();
}

.valueDisplay {
  margin-top: 0.5em;
  border: 1px solid @borderColor;
  position: relative;
  .name {
    text-align: center;
    right: 0;
    background-color: @titleBackgroundColor;
    padding: 5px;
  }
  .value {
    text-align: center;
    font-size: 2em;
  }
  .unit {
    position: absolute;
    bottom: 0.3em;
    right: 0.3em;
    font-size: 1.5em;
  }
}

.valueDisplay.ok {
  background-color: @okColor;
}
.valueDisplay.on {
  background-color: @okColor;
}
.valueDisplay.fail {
  background-color: @valueErrorColor;
}

.valueDisplay.waiting {
  background-color: @valueWaitingColor;
}


.error {
  margin: auto;
  color: @errorColor;
  border: 1px solid @borderColor;
  padding: 1em;
  font-size: 2em;
}

.toolbarButton(@icon){
  background-repeat: no-repeat;
  background-size: contain;
  background-image: url(@icon);
}
.mainView .toolbar .settingsButton {
 .toolbarButton("icons/settings.svg");
}
.settingsView .toolbar .buttonBack{
  .toolbarButton("icons/arrow_back.svg");
}

.buttonFrame(){
  width: 33%;
  padding: 0.3em;
  display:inline-block;
}
.commandBox{
  .mainItems();
  .commandInputFrame{
    width: 66%;
    display: inline-block;
    padding: 0.3em;
  }
  .freeCommandFrame{
   .buttonFrame();
  }
}

.blink_me(){
  animation: blinker 1s linear infinite;
}

@keyframes blinker {
  50% {
    opacity: 0;
  }
}

.resultItems(){
  border: 1px solid @mainColorDimmed;
  padding: 0.5em;
  overflow: auto;
}
.commandResult{
  .mainItems();
  white-space: pre;
  .resultItems();
}
.runningIndicator{
  .mainItems();
  .blink_me();
}
.commandError{
  .mainItems();
  .error();
  width: 10em;
}


.fixedCommandFrame{
  .buttonFrame();
  .danger{
    background-color: @errorColor;
  }
}

.setCommandFrame{
  .setInputs{
    display: inline-block;
    width: 66%;
  }
  .managedInput{
    display: inline-block;
    width: 50%;
  }
  .setButtonFrame{
    .buttonFrame();
  }
}